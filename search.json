[{"path":[]},{"path":"https://poissonconsulting.github.io/dttr2/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://poissonconsulting.github.io/dttr2/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://poissonconsulting.github.io/dttr2/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://poissonconsulting.github.io/dttr2/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://poissonconsulting.github.io/dttr2/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement [INSERT CONTACT METHOD]. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://poissonconsulting.github.io/dttr2/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://poissonconsulting.github.io/dttr2/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://poissonconsulting.github.io/dttr2/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://poissonconsulting.github.io/dttr2/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://poissonconsulting.github.io/dttr2/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://poissonconsulting.github.io/dttr2/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.0, available https://www.contributor-covenant.org/version/2/0/ code_of_conduct.html. Community Impact Guidelines inspired Mozilla’s code conduct enforcement ladder. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https:// www.contributor-covenant.org/translations.","code":""},{"path":"https://poissonconsulting.github.io/dttr2/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to dttr2","title":"Contributing to dttr2","text":"outlines propose change dttr2.","code":""},{"path":"https://poissonconsulting.github.io/dttr2/CONTRIBUTING.html","id":"fixing-typos","dir":"","previous_headings":"","what":"Fixing typos","title":"Contributing to dttr2","text":"can fix typos, spelling mistakes, grammatical errors documentation directly using GitHub web interface, long changes made source file. generally means ’ll need edit roxygen2 comments .R, .Rd file. can find .R file generates .Rd reading comment first line.","code":""},{"path":"https://poissonconsulting.github.io/dttr2/CONTRIBUTING.html","id":"bigger-changes","dir":"","previous_headings":"","what":"Bigger changes","title":"Contributing to dttr2","text":"want make bigger change, ’s good idea first file issue make sure someone team agrees ’s needed. ’ve found bug, please file issue illustrates bug minimal reprex (also help write unit test, needed).","code":""},{"path":"https://poissonconsulting.github.io/dttr2/CONTRIBUTING.html","id":"pull-request-process","dir":"","previous_headings":"Bigger changes","what":"Pull request process","title":"Contributing to dttr2","text":"Fork package clone onto computer. haven’t done , recommend using usethis::create_from_github(\"\", fork = TRUE). Install development dependences devtools::install_dev_deps(), make sure package passes R CMD check running devtools::check(). R CMD check doesn’t pass cleanly, ’s good idea ask help continuing. Create Git branch pull request (PR). recommend using usethis::pr_init(\"brief-description--change\"). Make changes, commit git, create PR running usethis::pr_push(), following prompts browser. title PR briefly describe change. body PR contain Fixes #issue-number. Begin commit merge messages - indicate user facing changes included NEWS.md. use fledge automatically generate NEWS.md file.","code":""},{"path":"https://poissonconsulting.github.io/dttr2/CONTRIBUTING.html","id":"code-style","dir":"","previous_headings":"Bigger changes","what":"Code style","title":"Contributing to dttr2","text":"New code follow tidyverse style guide. can use styler package apply styles, please don’t restyle code nothing PR. use roxygen2, Markdown syntax, documentation. use testthat unit tests. Contributions test cases included easier accept.","code":""},{"path":"https://poissonconsulting.github.io/dttr2/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to dttr2","text":"Please note dttr2 project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"https://poissonconsulting.github.io/dttr2/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 dttr2 authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://poissonconsulting.github.io/dttr2/SUPPORT.html","id":null,"dir":"","previous_headings":"","what":"Getting help with dttr2","title":"Getting help with dttr2","text":"Thanks using dttr2! filing issue, places explore pieces put together make process smooth possible.","code":""},{"path":"https://poissonconsulting.github.io/dttr2/SUPPORT.html","id":"make-sure-its-new","dir":"","previous_headings":"","what":"Make sure its new","title":"Getting help with dttr2","text":"opening new issue, sure search issues pull requests make sure bug hasn’t reported /already fixed development version. default, search pre-populated :issue :open. can edit qualifiers (e.g. :pr, :closed) needed. example, ’d simply remove :open search issues repo, open closed.","code":""},{"path":"https://poissonconsulting.github.io/dttr2/SUPPORT.html","id":"make-a-reprex","dir":"","previous_headings":"","what":"Make a reprex","title":"Getting help with dttr2","text":"Start making minimal reproducible example using reprex package. haven’t heard used reprex , ’re treat! Seriously, reprex make R-question-asking endeavors easier (pretty insane ROI five ten minutes ’ll take learn ’s ). additional reprex pointers, check Get help! section tidyverse site.","code":""},{"path":"https://poissonconsulting.github.io/dttr2/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Joe Thorley. Author. Ayla Pearson. Author, maintainer. Poisson Consulting. Copyright holder, funder.","code":""},{"path":"https://poissonconsulting.github.io/dttr2/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Thorley J, Pearson (2024). dttr2: Manipulate Date, POSIXct hms Vectors. R package version 0.5.0.9002, https://poissonconsulting.github.io/dttr2/, https://github.com/poissonconsulting/dttr2.","code":"@Manual{,   title = {dttr2: Manipulate Date, POSIXct and hms Vectors},   author = {Joe Thorley and Ayla Pearson},   year = {2024},   note = {R package version 0.5.0.9002,     https://poissonconsulting.github.io/dttr2/},   url = {https://github.com/poissonconsulting/dttr2}, }"},{"path":[]},{"path":"https://poissonconsulting.github.io/dttr2/index.html","id":"introduction","dir":"","previous_headings":"","what":"Introduction","title":"Manipulate Date, POSIXct and hms Vectors","text":"dttr2 (Dates, Times dateTimes R) R package perform simple manipulations date (Date), datetime (POSIXct) time (hms) vectors (collectively referred date/times). Key design principles include use existing classes (Date, POSIXct, hms) date/times discrete (floor encountered) times times (wrap encountered) maintain current timezone (principle least astonishment) origin always assumed 1970-01-01 UTC (keep simple)","code":""},{"path":"https://poissonconsulting.github.io/dttr2/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Manipulate Date, POSIXct and hms Vectors","text":"install latest release version CRAN install latest development version GitHub","code":"install.packages(\"dttr2\") # install.packages(\"pak\") pak::pak(\"poissonconsulting/dttr2\")"},{"path":[]},{"path":"https://poissonconsulting.github.io/dttr2/index.html","id":"time-units","dir":"","previous_headings":"Introduction","what":"Time Units","title":"Manipulate Date, POSIXct and hms Vectors","text":"dttr2 floors date/time objects encounters nearest time unit (default days Date seconds POSIXct hms). Similarly, time unit accessor (dtt_second(), dtt_minute() etc) settor functions well functions add (ie dtt_add_seconds()) subtract time units return require integers.","code":"library(dttr2) date <- as.Date(1.75, origin = \"1970-01-01\") date #> [1] \"1970-01-02\" as.numeric(date) #> [1] 1.75  date <- dtt_date(date) date #> [1] \"1970-01-02\" as.numeric(date) #> [1] 1 dtt_day(date) #> [1] 2 dtt_add_days(date, 2L) #> [1] \"1970-01-04\" dtt_add_months(date, 24L) #> [1] \"1972-01-02\""},{"path":"https://poissonconsulting.github.io/dttr2/index.html","id":"times","dir":"","previous_headings":"Introduction","what":"Times","title":"Manipulate Date, POSIXct and hms Vectors","text":"dttr2 wraps negative times times greater 23:59:59 actual clock time.","code":"time <- hms::as_hms(-3) time #> -00:00:03 dtt_time(time) #> 23:59:57 dtt_time(hms::as_hms(\"24:00:00\")) #> 00:00:00"},{"path":"https://poissonconsulting.github.io/dttr2/index.html","id":"time-zones","dir":"","previous_headings":"Introduction","what":"Time Zones","title":"Manipulate Date, POSIXct and hms Vectors","text":"user can override default time zone (UTC) handling POSIXct vectors using dtt_set_default_tz(). can assign new time zone POSIXct object whilst leaving clock time unchanged using dtt_set_tz() adjust time zone clock (actual) time altered using dtt_adjust_tz()","code":"dtt_default_tz() #> [1] \"UTC\" date_time <- dtt_date_time(\"1970-01-01 03:00:00\") dtt_set_default_tz(\"Etc/GMT+10\") dtt_default_tz() #> [1] \"Etc/GMT+10\" date_time #> [1] \"1970-01-01 03:00:00 UTC\" date_time #> [1] \"1970-01-01 03:00:00 UTC\" dtt_set_tz(date_time) #> [1] \"1970-01-01 03:00:00 -10\" dtt_adjust_tz(date_time) #> [1] \"1969-12-31 17:00:00 -10\""},{"path":"https://poissonconsulting.github.io/dttr2/index.html","id":"combining-dates-and-times","dir":"","previous_headings":"Introduction","what":"Combining Dates and Times","title":"Manipulate Date, POSIXct and hms Vectors","text":"dttr2 makes easy decompose POSIXct vectors Date hms vectors recombine . neither dates times associated time zones unless user passes value assigned default time zone.","code":"date_time #> [1] \"1970-01-01 03:00:00 UTC\" date <- dtt_date(date_time) date #> [1] \"1970-01-01\" time <- dtt_time(date_time) time #> 03:00:00 dtt_date_time(date, time) #> [1] \"1970-01-01 03:00:00 -10\""},{"path":"https://poissonconsulting.github.io/dttr2/index.html","id":"inspiration","dir":"","previous_headings":"","what":"Inspiration","title":"Manipulate Date, POSIXct and hms Vectors","text":"dttr2 influenced lubridate. aims provide alternative simple manipulations.","code":""},{"path":"https://poissonconsulting.github.io/dttr2/index.html","id":"contribution","dir":"","previous_headings":"","what":"Contribution","title":"Manipulate Date, POSIXct and hms Vectors","text":"Please report issues. Pull requests always welcome.","code":""},{"path":"https://poissonconsulting.github.io/dttr2/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Manipulate Date, POSIXct and hms Vectors","text":"Please note dttr2 project released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/NA_Date_.html","id":null,"dir":"Reference","previous_headings":"","what":"Missing Date — NA_Date_","title":"Missing Date — NA_Date_","text":"missing Date object","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/NA_Date_.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Missing Date — NA_Date_","text":"","code":"NA_Date_"},{"path":"https://poissonconsulting.github.io/dttr2/reference/NA_Date_.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Missing Date — NA_Date_","text":"object class Date length 1.","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/NA_POSIXct_.html","id":null,"dir":"Reference","previous_headings":"","what":"Missing POSIXct — NA_POSIXct_","title":"Missing POSIXct — NA_POSIXct_","text":"missing POSIXct object","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/NA_POSIXct_.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Missing POSIXct — NA_POSIXct_","text":"","code":"NA_POSIXct_"},{"path":"https://poissonconsulting.github.io/dttr2/reference/NA_POSIXct_.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Missing POSIXct — NA_POSIXct_","text":"object class POSIXct (inherits POSIXt) length 1.","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/NA_hms_.html","id":null,"dir":"Reference","previous_headings":"","what":"Missing hms — NA_hms_","title":"Missing hms — NA_hms_","text":"missing hms object","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/NA_hms_.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Missing hms — NA_hms_","text":"","code":"NA_hms_"},{"path":"https://poissonconsulting.github.io/dttr2/reference/NA_hms_.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Missing hms — NA_hms_","text":"object class hms (inherits difftime) length 1.","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/check_tz.html","id":null,"dir":"Reference","previous_headings":"","what":"Check Time Zone — check_tz","title":"Check Time Zone — check_tz","text":"Checks object's time zone returned dtt_tz().","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/check_tz.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check Time Zone — check_tz","text":"","code":"check_tz(x, tz = dtt_tz(x), x_name = substitute(x), error = TRUE)"},{"path":"https://poissonconsulting.github.io/dttr2/reference/check_tz.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check Time Zone — check_tz","text":"x object check. tz string time zone check x's matches. x_name string name object. error flag indicating whether throw informative error immediately generate informative message check fails.","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/check_tz.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check Time Zone — check_tz","text":"invisible copy x (throw error).","code":""},{"path":[]},{"path":"https://poissonconsulting.github.io/dttr2/reference/check_tz.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check Time Zone — check_tz","text":"","code":"check_tz(Sys.time(), \"UTC\", error = FALSE) #> Warning: `check_tz()` was deprecated in dttr2 0.1.0. #> ℹ Replace with `chk::chk_identical(dtt_tz(x), tz)`. To check whether a valid #>   time zone use `chk::chk_tz(x)`."},{"path":"https://poissonconsulting.github.io/dttr2/reference/chk_time.html","id":null,"dir":"Reference","previous_headings":"","what":"Check Time — chk_time","title":"Check Time — chk_time","text":"Checks scalar hms object using vld_time().","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/chk_time.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check Time — chk_time","text":"","code":"chk_time(x, x_name = NULL)"},{"path":"https://poissonconsulting.github.io/dttr2/reference/chk_time.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check Time — chk_time","text":"x object check. x_name string name object x NULL.","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/chk_time.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check Time — chk_time","text":"NULL, invisibly. Called side effect throwing error condition met.","code":""},{"path":[]},{"path":"https://poissonconsulting.github.io/dttr2/reference/chk_time.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check Time — chk_time","text":"","code":"chk_time(hms::as_hms(\"10:00:10\")) try(chk_time(1)) #> Error in eval(expr, envir, enclos) :  #>   `1` must be a time (non-missing hms::hms scalar)."},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt.html","id":null,"dir":"Reference","previous_headings":"","what":"dtt Object — dtt","title":"dtt Object — dtt","text":"dtt (short date time) object object class Date (date), POSIXct (datetime) hms (time).","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_add_units.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Time Units — dtt_add_units","title":"Add Time Units — dtt_add_units","text":"Add time units date time vector.","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_add_units.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Time Units — dtt_add_units","text":"","code":"dtt_add_units(x, units, n = 1L)  dtt_add_years(x, n = 1L, ...)  dtt_add_months(x, n = 1L, ...)  dtt_add_days(x, n = 1L, ...)  dtt_add_hours(x, n = 1L, ...)  dtt_add_minutes(x, n = 1L, ...)  dtt_add_seconds(x, n = 1L, ...)"},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_add_units.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Time Units — dtt_add_units","text":"x date/time vector. units string time units. possible values \"secs\", \"minutes\", \"hours\", \"days\" \"weeks\". n integer number units. ... Unused.","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_add_units.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Time Units — dtt_add_units","text":"modified date time vector.","code":""},{"path":[]},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_add_units.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add Time Units — dtt_add_units","text":"","code":"dtt_add_units(as.Date(\"1999-12-31\"), \"days\") #> [1] \"2000-01-01\""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_adjust_tz.html","id":null,"dir":"Reference","previous_headings":"","what":"Adjust Time Zone — dtt_adjust_tz","title":"Adjust Time Zone — dtt_adjust_tz","text":"Adjusts time zone clock (actual) time altered date time vector. Equivalent lubridate::with_tz().","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_adjust_tz.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adjust Time Zone — dtt_adjust_tz","text":"","code":"dtt_adjust_tz(x, tz = dtt_default_tz(), ...)  # S3 method for class 'POSIXct' dtt_adjust_tz(x, tz = dtt_default_tz(), ...)"},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_adjust_tz.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adjust Time Zone — dtt_adjust_tz","text":"x POSIXct vector. tz string time zone. ... Unused.","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_adjust_tz.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Adjust Time Zone — dtt_adjust_tz","text":"date time vector new time zone time.","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_adjust_tz.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Adjust Time Zone — dtt_adjust_tz","text":"dtt_adjust_tz(POSIXct): Adjust time zone POSIXct vector","code":""},{"path":[]},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_adjust_tz.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Adjust Time Zone — dtt_adjust_tz","text":"","code":"dtt_adjust_tz(as.POSIXct(\"1970-01-01\", tz = \"Etc/GMT+8\"), tz = \"UTC\") #> [1] \"1970-01-01 08:00:00 UTC\""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_adjust_units.html","id":null,"dir":"Reference","previous_headings":"","what":"Adjust Units — dtt_adjust_units","title":"Adjust Units — dtt_adjust_units","text":"Adjust Units","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_adjust_units.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adjust Units — dtt_adjust_units","text":"","code":"dtt_adjust_units(x, from = \"seconds\", to = \"seconds\")"},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_adjust_units.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adjust Units — dtt_adjust_units","text":"x integer numeric vector string original units. string new units.","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_adjust_units.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Adjust Units — dtt_adjust_units","text":"numeric vector.","code":""},{"path":[]},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_adjust_units.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Adjust Units — dtt_adjust_units","text":"","code":"dtt_adjust_units(60, to = \"minutes\") #> [1] 1"},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_aggregate.html","id":null,"dir":"Reference","previous_headings":"","what":"Aggregate Date/Time — dtt_aggregate","title":"Aggregate Date/Time — dtt_aggregate","text":"Aggregates date/time vector","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_aggregate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Aggregate Date/Time — dtt_aggregate","text":"","code":"dtt_aggregate(x, units, ...)  # S3 method for class 'Date' dtt_aggregate(x, units = \"days\", ...)  # S3 method for class 'POSIXct' dtt_aggregate(x, units = \"seconds\", ...)  # S3 method for class 'hms' dtt_aggregate(x, units = \"seconds\", ...)"},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_aggregate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Aggregate Date/Time — dtt_aggregate","text":"x date/time vector. units string time units. possible values \"secs\", \"minutes\", \"hours\", \"days\" \"weeks\". ... Unused.","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_aggregate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Aggregate Date/Time — dtt_aggregate","text":"floored date/time vector.","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_aggregate.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Aggregate Date/Time — dtt_aggregate","text":"possible units values 'seconds', 'minutes', 'hours', 'days', 'months' 'years'.","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_aggregate.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Aggregate Date/Time — dtt_aggregate","text":"dtt_aggregate(Date): Aggregate Date vector dtt_aggregate(POSIXct): Aggregate POSIXct vector dtt_aggregate(hms): Aggregate hms vector","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_aggregate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Aggregate Date/Time — dtt_aggregate","text":"","code":"dtt_aggregate(as.Date(c(\"1992-01-01\", \"1991-02-02\", \"1991-03-03\")), \"years\") #> [1] \"1992-01-01\" \"1991-01-01\""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_complete.html","id":null,"dir":"Reference","previous_headings":"","what":"Complete — dtt_complete","title":"Complete — dtt_complete","text":"Completes date/time vector.","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_complete.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Complete — dtt_complete","text":"","code":"dtt_complete(x, ...)  # S3 method for class 'Date' dtt_complete(   x,   from = min(x),   to = max(x),   units = \"days\",   unique = TRUE,   sort = TRUE,   ... )  # S3 method for class 'POSIXct' dtt_complete(   x,   from = min(x),   to = max(x),   units = \"seconds\",   unique = TRUE,   sort = TRUE,   ... )  # S3 method for class 'hms' dtt_complete(   x,   from = min(x),   to = max(x),   units = \"seconds\",   unique = TRUE,   sort = TRUE,   ... )"},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_complete.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Complete — dtt_complete","text":"x date/time vector. ... Unused. date/time scalar start. date/time scalar end. units string time units. possible values \"secs\", \"minutes\", \"hours\", \"days\" \"weeks\". unique flag specifying whether return unique values. sort flag specifying whether sort vector.","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_complete.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Complete — dtt_complete","text":"completed date/time vector.","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_complete.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Complete — dtt_complete","text":"dtt_complete(Date): Complete Date sequence vector dtt_complete(POSIXct): Complete POSIXct sequence vector dtt_complete(hms): Complete hms sequence vector","code":""},{"path":[]},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_complete.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Complete — dtt_complete","text":"","code":"dtt_complete(as.Date(c(\"2001-01-01\", \"2001-01-03\", \"2001-01-01\"))) #> [1] \"2001-01-01\" \"2001-01-02\" \"2001-01-03\""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_completed.html","id":null,"dir":"Reference","previous_headings":"","what":"Completed — dtt_completed","title":"Completed — dtt_completed","text":"Tests whether date time complete.","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_completed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Completed — dtt_completed","text":"","code":"dtt_completed(x, ...)  # S3 method for class 'Date' dtt_completed(x, units = \"days\", unique = TRUE, sorted = TRUE, ...)  # S3 method for class 'POSIXct' dtt_completed(x, units = \"seconds\", unique = TRUE, sorted = TRUE, ...)  # S3 method for class 'hms' dtt_completed(x, units = \"seconds\", unique = TRUE, sorted = TRUE, ...)"},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_completed.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Completed — dtt_completed","text":"x date/time vector. ... Unused. units string time units. possible values \"secs\", \"minutes\", \"hours\", \"days\" \"weeks\". unique flag indicating whether values must unique. sorted flag indicating whether values must sorted.","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_completed.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Completed — dtt_completed","text":"flag indicating whether complete.","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_completed.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Completed — dtt_completed","text":"dtt_completed(Date): Test Date vector complete dtt_completed(POSIXct): Test POSIXct vector complete dtt_completed(hms): Test POSIXct vector complete","code":""},{"path":[]},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_date.html","id":null,"dir":"Reference","previous_headings":"","what":"Floor Date — dtt_date","title":"Floor Date — dtt_date","text":"Coerces vectors floored Date vectors.","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_date.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Floor Date — dtt_date","text":"","code":"dtt_date(x, ...)  dtt_date(x) <- value  # S3 method for class 'integer' dtt_date(x, origin = as.Date(\"1970-01-01\"), ...)  # S3 method for class 'double' dtt_date(x, origin = as.Date(\"1970-01-01\"), ...)  # S3 method for class 'character' dtt_date(x, ...)  # S3 method for class 'Date' dtt_date(x, ...)  # S3 method for class 'POSIXct' dtt_date(x, ...)  # S3 method for class 'hms' dtt_date(x, ...)  # S3 method for class 'Date' dtt_date(x) <- value  # S3 method for class 'POSIXct' dtt_date(x) <- value  dtt_set_date(x, value)"},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_date.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Floor Date — dtt_date","text":"x vector. ... Unused. value date vector. origin Origin date.","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_date.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Floor Date — dtt_date","text":"floored Date vector.","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_date.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Floor Date — dtt_date","text":"dtt_date(integer): Coerce integer vector floored Date vector dtt_date(double): Coerce double vector floored Date vector dtt_date(character): Coerce character vector floored Date vector dtt_date(Date): Coerce Date vector floored Date vector dtt_date(POSIXct): Coerce POSIXct vector floored Date vector dtt_date(hms): Coerce hms vector floored Date vector","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_date.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Floor Date — dtt_date","text":"dtt_date(Date) <- value: Set date values Date vector dtt_date(POSIXct) <- value: Set date values POSIXct vector","code":""},{"path":[]},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_date.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Floor Date — dtt_date","text":"","code":"dtt_date(1L) #> [1] \"1970-01-02\" dtt_date(-1) #> [1] \"1969-12-31\" dtt_date(\"2000-01-01\") #> [1] \"2000-01-01\" as.Date(as.POSIXct(\"2019-05-01\", tz = \"Etc/GMT-8\")) #> [1] \"2019-04-30\" dtt_date(as.POSIXct(\"2019-05-01\", tz = \"Etc/GMT-8\")) #> [1] \"2019-05-01\" dtt_date(hms::as_hms(\"23:59:59\")) #> [1] \"1970-01-01\" dtt_date(hms::as_hms(\"24:00:00\")) #> [1] \"1970-01-02\""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_date_add_time.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Time to Date — dtt_date_add_time","title":"Add Time to Date — dtt_date_add_time","text":"Adds times Dates vector sets timezone single function.","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_date_add_time.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Time to Date — dtt_date_add_time","text":"","code":"dtt_date_add_time(x, time, tz = dtt_default_tz())"},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_date_add_time.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Time to Date — dtt_date_add_time","text":"x Date vector. time hms vector time. tz string time zone.","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_date_add_time.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Time to Date — dtt_date_add_time","text":"POSIXct vector.","code":""},{"path":[]},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_date_add_time.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add Time to Date — dtt_date_add_time","text":"","code":"dtt_date_add_time(   as.Date(\"2001-03-05\"),   hms::as_hms(\"06:07:08\"),   tz = \"Etc/GMT+9\" ) #> [1] \"2001-03-05 06:07:08 -09\""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_date_from_ints.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Dates from Integers — dtt_date_from_ints","title":"Create Dates from Integers — dtt_date_from_ints","text":"Create date object vectors year, month day values.","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_date_from_ints.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Dates from Integers — dtt_date_from_ints","text":"","code":"dtt_date_from_ints(year = 1972L, month = 1L, day = 1L)"},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_date_from_ints.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Dates from Integers — dtt_date_from_ints","text":"year integer year. default value 1972. month integer month 1 12. default value 1st month. day integer day 1 31. default value 1st day.","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_date_from_ints.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Dates from Integers — dtt_date_from_ints","text":"floored Date vector.","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_date_from_ints.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create Dates from Integers — dtt_date_from_ints","text":"can helpful needing create date column data frame year, month days columns. Vectors must length length one.","code":""},{"path":[]},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_date_from_ints.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create Dates from Integers — dtt_date_from_ints","text":"","code":"dtt_date_from_ints(   year = 1991,   month = 07,   day = 23 ) #> [1] \"1991-07-23\"  dtt_date_from_ints(   year = c(1991, 1992, 1993),   month = c(07, 07, 07),   day = c(23, 24, 21) ) #> [1] \"1991-07-23\" \"1992-07-24\" \"1993-07-21\"  year_vals <- c(1991, 1992, 1993) month_vals <- c(07, 07, 07) day_vals <- c(23, 24, 21) dtt_date_from_ints(year_vals, month_vals, day_vals) #> [1] \"1991-07-23\" \"1992-07-24\" \"1993-07-21\"  year_vals <- 2022 month_vals <- 1:12 day_vals <- 15 dtt_date_from_ints(year_vals, month_vals, day_vals) #>  [1] \"2022-01-15\" \"2022-02-15\" \"2022-03-15\" \"2022-04-15\" \"2022-05-15\" #>  [6] \"2022-06-15\" \"2022-07-15\" \"2022-08-15\" \"2022-09-15\" \"2022-10-15\" #> [11] \"2022-11-15\" \"2022-12-15\"  dtt_date_from_ints(year_vals, month_vals) #>  [1] \"2022-01-01\" \"2022-02-01\" \"2022-03-01\" \"2022-04-01\" \"2022-05-01\" #>  [6] \"2022-06-01\" \"2022-07-01\" \"2022-08-01\" \"2022-09-01\" \"2022-10-01\" #> [11] \"2022-11-01\" \"2022-12-01\""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_date_time.html","id":null,"dir":"Reference","previous_headings":"","what":"Floor Date/Time — dtt_date_time","title":"Floor Date/Time — dtt_date_time","text":"Coerces vectors floored POSIXct vectors.","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_date_time.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Floor Date/Time — dtt_date_time","text":"","code":"dtt_date_time(x, ...)  # S3 method for class 'integer' dtt_date_time(x, tz = dtt_default_tz(), ...)  # S3 method for class 'double' dtt_date_time(x, tz = dtt_default_tz(), ...)  # S3 method for class 'character' dtt_date_time(x, tz = dtt_default_tz(), ...)  # S3 method for class 'Date' dtt_date_time(x, time = hms::as_hms(\"00:00:00\"), tz = dtt_default_tz(), ...)  # S3 method for class 'POSIXct' dtt_date_time(x, tz = dtt_tz(x), ...)  # S3 method for class 'hms' dtt_date_time(x, date = dtt_date(\"1970-01-01\"), tz = dtt_default_tz(), ...)"},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_date_time.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Floor Date/Time — dtt_date_time","text":"x vector. ... Unused. tz string time zone. time hms vector time. date Date vector date.","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_date_time.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Floor Date/Time — dtt_date_time","text":"floored POSIXct vector.","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_date_time.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Floor Date/Time — dtt_date_time","text":"dtt_date_time(integer): Coerce integer vector floored POSIXct vector dtt_date_time(double): Coerce double vector floored POSIXct vector dtt_date_time(character): Coerce character vector floored POSIXct vector dtt_date_time(Date): Coerce Date vector floored POSIXct vector dtt_date_time(POSIXct): Coerce POSIXct vector floored POSIXct vector dtt_date_time(hms): Coerce hms vector floored POSIXct vector","code":""},{"path":[]},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_date_time.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Floor Date/Time — dtt_date_time","text":"","code":"dtt_date_time(1L) #> [1] \"1970-01-01 00:00:01 UTC\" dtt_date_time(-1) #> [1] \"1969-12-31 23:59:59 UTC\" dtt_date_time(1, tz = \"Etc/GMT+8\") #> [1] \"1969-12-31 16:00:01 -08\" dtt_date_time(as.Date(\"2000-01-02\")) #> [1] \"2000-01-02 UTC\" dtt_date_time(as.Date(\"2000-01-02\"), time = hms::as_hms(\"04:05:06\")) #> [1] \"2000-01-02 04:05:06 UTC\""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_date_time_from_ints.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Date Times from Integers — dtt_date_time_from_ints","title":"Create Date Times from Integers — dtt_date_time_from_ints","text":"Create date object vectors year, month day values.","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_date_time_from_ints.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Date Times from Integers — dtt_date_time_from_ints","text":"","code":"dtt_date_time_from_ints(   year = 1972L,   month = 1L,   day = 1L,   hour = 0L,   minute = 0L,   second = 0L,   tz = dtt_default_tz() )"},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_date_time_from_ints.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Date Times from Integers — dtt_date_time_from_ints","text":"year integer year. default value 1972. month integer month 1 12. default value 1st month. day integer day 1 31. default value 1st day. hour integer hour 0 23.default value hour zero. minute integer minute 0 59. default value minute zero. second integer second 0 59. default value second zero. tz string time zone.","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_date_time_from_ints.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Date Times from Integers — dtt_date_time_from_ints","text":"POSIXct vector","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_date_time_from_ints.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create Date Times from Integers — dtt_date_time_from_ints","text":"can helpful needing create date time column data frame year, month, day, hour, minute, second columns. Vectors must length length one.","code":""},{"path":[]},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_date_time_from_ints.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create Date Times from Integers — dtt_date_time_from_ints","text":"","code":"dtt_date_time_from_ints(   year = 1991,   month = 07,   day = 23,   hour = 06,   minute = 25,   second = 0,   tz = \"Etc/GMT+8\" ) #> [1] \"1991-07-23 06:25:00 -08\"  dtt_date_time_from_ints(   year = c(1991, 1992, 1993),   month = c(07, 07, 07),   day = c(23, 24, 21),   hour = c(06, 05, 07),   minute = c(25, 24, 15),   second = c(0, 0, 0),   tz = \"Etc/GMT+8\" ) #> [1] \"1991-07-23 06:25:00 -08\" \"1992-07-24 05:24:00 -08\" #> [3] \"1993-07-21 07:15:00 -08\"  year <- c(1991, 1992, 1993) month <- c(07, 08, 09) day <- c(23, 24, 21) hour <- c(06, 05, 07) minute <- c(25, 24, 15) second <- 30 dtt_date_time_from_ints(year, month, day, hour, minute, second) #> [1] \"1991-07-23 06:25:30 UTC\" \"1992-08-24 05:24:30 UTC\" #> [3] \"1993-09-21 07:15:30 UTC\"  dtt_date_time_from_ints(year, month, day) #> [1] \"1991-07-23 UTC\" \"1992-08-24 UTC\" \"1993-09-21 UTC\""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_day.html","id":null,"dir":"Reference","previous_headings":"","what":"Get and Set Day Values — dtt_day","title":"Get and Set Day Values — dtt_day","text":"Gets sets day values date/time vectors.","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_day.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get and Set Day Values — dtt_day","text":"","code":"dtt_day(x, ...)  dtt_day(x) <- value  # S3 method for class 'Date' dtt_day(x, ...)  # S3 method for class 'POSIXct' dtt_day(x, ...)  # S3 method for class 'Date' dtt_day(x) <- value  # S3 method for class 'POSIXct' dtt_day(x) <- value  dtt_days(x, ...)  dtt_days(x) <- value  dtt_set_day(x, value)"},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_day.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get and Set Day Values — dtt_day","text":"x date/time vector. ... Unused. value integer vector day value(s).","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_day.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get and Set Day Values — dtt_day","text":"integer vector (modified date/time vector).","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_day.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Get and Set Day Values — dtt_day","text":"dtt_day(Date): Get integer vector day values Date vector dtt_day(POSIXct): Get integer vector day values POSIXct vector","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_day.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Get and Set Day Values — dtt_day","text":"dtt_day(Date) <- value: Set day values Date vector dtt_day(POSIXct) <- value: Set day values POSIXct vector","code":""},{"path":[]},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_day.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get and Set Day Values — dtt_day","text":"","code":"x <- as.Date(\"1990-01-02\") dtt_day(x) #> [1] 2 dtt_day(x) <- 27L x #> [1] \"1990-01-27\"  x <- as.POSIXct(\"1990-01-02 23:40:51\") dtt_day(x) #> [1] 2 dtt_day(x) <- 27L x #> [1] \"1990-01-27 23:40:51 UTC\""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_day_decimal.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Decimal Day Values — dtt_day_decimal","title":"Get Decimal Day Values — dtt_day_decimal","text":"Gets decimal day values date/time vectors.","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_day_decimal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Decimal Day Values — dtt_day_decimal","text":"","code":"dtt_day_decimal(x, ...)  # S3 method for class 'Date' dtt_day_decimal(x, ...)  # S3 method for class 'POSIXct' dtt_day_decimal(x, ...)"},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_day_decimal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Decimal Day Values — dtt_day_decimal","text":"x date/time vector. ... Unused.","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_day_decimal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Decimal Day Values — dtt_day_decimal","text":"numeric vector.","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_day_decimal.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Get Decimal Day Values — dtt_day_decimal","text":"dtt_day_decimal(Date): Get numeric vector decimal year values Date vector dtt_day_decimal(POSIXct): Get numeric vector decimal year values POSIXct vector","code":""},{"path":[]},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_day_decimal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Decimal Day Values — dtt_day_decimal","text":"","code":"x <- as.POSIXct(\"1990-01-03 10:00:01\") dtt_day_decimal(x) #> [1] 3.416678"},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_days_in_month.html","id":null,"dir":"Reference","previous_headings":"","what":"Days in the Month — dtt_days_in_month","title":"Days in the Month — dtt_days_in_month","text":"Days Month","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_days_in_month.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Days in the Month — dtt_days_in_month","text":"","code":"dtt_days_in_month(x)"},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_days_in_month.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Days in the Month — dtt_days_in_month","text":"x Date POSIXct vector.","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_days_in_month.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Days in the Month — dtt_days_in_month","text":"integer vector 28 31 indicating days month.","code":""},{"path":[]},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_days_in_month.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Days in the Month — dtt_days_in_month","text":"","code":"dtt_days_in_month(as.Date(c(\"2000-02-11\", \"2001-02-01\"))) #> [1] 29 28"},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_days_in_year.html","id":null,"dir":"Reference","previous_headings":"","what":"Days in the Year — dtt_days_in_year","title":"Days in the Year — dtt_days_in_year","text":"Days Year","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_days_in_year.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Days in the Year — dtt_days_in_year","text":"","code":"dtt_days_in_year(x)"},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_days_in_year.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Days in the Year — dtt_days_in_year","text":"x Date POSIXct vector.","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_days_in_year.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Days in the Year — dtt_days_in_year","text":"integer vector 365 366 indicates days year.","code":""},{"path":[]},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_days_in_year.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Days in the Year — dtt_days_in_year","text":"","code":"dtt_days_in_year(as.Date(c(\"2000-10-11\", \"2001-01-01\"))) #> [1] 366 365"},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_dayte.html","id":null,"dir":"Reference","previous_headings":"","what":"Dayte — dtt_dayte","title":"Dayte — dtt_dayte","text":"Dayte","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_dayte.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dayte — dtt_dayte","text":"","code":"dtt_dayte(x, ...)  # S3 method for class 'Date' dtt_dayte(x, start = 1L, ...)  # S3 method for class 'POSIXct' dtt_dayte(x, start = 1L, ...)"},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_dayte.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dayte — dtt_dayte","text":"x date/time vector. ... Unused. start integer scalar starting month Date scalar starting date.","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_dayte.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Dayte — dtt_dayte","text":"Date vector year set year. Date vector daytes.","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_dayte.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Dayte — dtt_dayte","text":"dtt_dayte(Date): Dayte Date vector dtt_dayte(POSIXct): Dayte POSIXct vector","code":""},{"path":[]},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_dayte.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Dayte — dtt_dayte","text":"","code":"dtt_dayte(as.Date(c(\"2001-01-01\", \"2015-12-13\"))) #> [1] \"1972-01-01\" \"1972-12-13\""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_dayte_time.html","id":null,"dir":"Reference","previous_headings":"","what":"Dayte Time — dtt_dayte_time","title":"Dayte Time — dtt_dayte_time","text":"Dayte Time","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_dayte_time.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dayte Time — dtt_dayte_time","text":"","code":"dtt_dayte_time(x, ...)  # S3 method for class 'Date' dtt_dayte_time(x, start = 1L, tz = dtt_default_tz(), ...)  # S3 method for class 'POSIXct' dtt_dayte_time(x, start = 1L, ...)"},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_dayte_time.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dayte Time — dtt_dayte_time","text":"x date/time vector. ... Unused. start integer scalar starting month Date scalar starting date. tz string time zone.","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_dayte_time.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Dayte Time — dtt_dayte_time","text":"Date vector year set year. POSIXct vector dayte times.","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_dayte_time.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Dayte Time — dtt_dayte_time","text":"dtt_dayte_time(Date): Dayte Time Date vector dtt_dayte_time(POSIXct): Dayte Time POSIXct vector","code":""},{"path":[]},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_dayte_time.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Dayte Time — dtt_dayte_time","text":"","code":"dtt_dayte_time(   as.POSIXct(     c(\"2001-01-01 12:13:14\", \"2015-12-13\"),     tz = \"Etc/GMT+10\"   ) ) #> [1] \"1972-01-01 -10\" \"1972-12-13 -10\""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_daytt.html","id":null,"dir":"Reference","previous_headings":"","what":"Dayte Time — dtt_daytt","title":"Dayte Time — dtt_daytt","text":"Dayte Time","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_daytt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dayte Time — dtt_daytt","text":"","code":"dtt_daytt(x, start = 1L)"},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_daytt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dayte Time — dtt_daytt","text":"x Date POSIXct vector. start integer vector starting month Date vector starting date.","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_daytt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Dayte Time — dtt_daytt","text":"Date POSIXct vector year February 29th 1972.","code":""},{"path":[]},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_decade.html","id":null,"dir":"Reference","previous_headings":"","what":"Decade — dtt_decade","title":"Decade — dtt_decade","text":"Decade","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_decade.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Decade — dtt_decade","text":"","code":"dtt_decade(x, ...)  # S3 method for class 'Date' dtt_decade(x, ...)"},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_decade.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Decade — dtt_decade","text":"x date/time vector. ... Unused.","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_decade.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Decade — dtt_decade","text":"integer vector decade.","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_decade.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Decade — dtt_decade","text":"dtt_decade(Date): Decade Date vector","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_decade.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Decade — dtt_decade","text":"","code":"dtt_decade(as.Date(c(\"2001-01-01\", \"2015-12-13\"))) #> [1] 2000 2010"},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_default_tz.html","id":null,"dir":"Reference","previous_headings":"","what":"Get, Set or Reset Default Time Zone — dtt_sys_tz","title":"Get, Set or Reset Default Time Zone — dtt_sys_tz","text":"Get, Set Reset Default Time Zone","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_default_tz.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get, Set or Reset Default Time Zone — dtt_sys_tz","text":"","code":"dtt_sys_tz()  dtt_set_sys_tz(tz = NULL)  dtt_reset_sys_tz()  dtt_default_tz()  dtt_set_default_tz(tz = NULL)  dtt_reset_default_tz()"},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_default_tz.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get, Set or Reset Default Time Zone — dtt_sys_tz","text":"tz string time zone.","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_default_tz.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get, Set or Reset Default Time Zone — dtt_sys_tz","text":"string current old time zone.","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_default_tz.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Get, Set or Reset Default Time Zone — dtt_sys_tz","text":"dtt_set_default_tz(): Set Default Time Zone dtt_reset_default_tz(): Reset Default Time Zone","code":""},{"path":[]},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_default_tz.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get, Set or Reset Default Time Zone — dtt_sys_tz","text":"","code":"if (FALSE) { # \\dontrun{ dtt_default_tz() old <- dtt_set_default_tz(\"Etc/GMT+8\") dtt_default_tz() dtt_reset_default_tz() dtt_default_tz() dtt_set_default_tz(old) dtt_default_tz() } # }"},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_diff.html","id":null,"dir":"Reference","previous_headings":"","what":"Time Difference — dtt_diff","title":"Time Difference — dtt_diff","text":"Gets time difference secs, minutes, hours, days weeks. Uses difftime() floors x y first coercing POSIXct adjusts timezone y match x.","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_diff.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Time Difference — dtt_diff","text":"","code":"dtt_diff(x, y, units = \"secs\", as_difftime = FALSE)"},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_diff.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Time Difference — dtt_diff","text":"x object can coerced POSIXct using dtt_date_time(). y object can coerced POSIXct using dtt_date_time(). units string time units. possible values \"secs\", \"minutes\", \"hours\", \"days\" \"weeks\". as_difftime flag specifying whether return difftime vector.","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_diff.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Time Difference — dtt_diff","text":"numeric vector time difference.","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_diff.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Time Difference — dtt_diff","text":"","code":"dtt_diff(   as.Date(c(\"2001-01-02\", \"2000-12-31\")),   as.Date(\"2001-01-01\"),   \"hours\" ) #> [1]  24 -24 dtt_diff(as.Date(\"2001-01-02\"), as.Date(\"2001-01-01\"), \"weeks\") #> [1] 0.1428571"},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_doy.html","id":null,"dir":"Reference","previous_headings":"","what":"Day of the Year — dtt_doy","title":"Day of the Year — dtt_doy","text":"Day Year","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_doy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Day of the Year — dtt_doy","text":"","code":"dtt_doy(x, ...)"},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_doy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Day of the Year — dtt_doy","text":"x Date POSIXct vector. ... Unused.","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_doy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Day of the Year — dtt_doy","text":"integer vector 1 366 day year.","code":""},{"path":[]},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_doy.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Day of the Year — dtt_doy","text":"","code":"dtt_doy(Sys.Date()) #> [1] 257"},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_doy_decimal.html","id":null,"dir":"Reference","previous_headings":"","what":"Day of the Year Decimal — dtt_doy_decimal","title":"Day of the Year Decimal — dtt_doy_decimal","text":"Day Year Decimal","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_doy_decimal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Day of the Year Decimal — dtt_doy_decimal","text":"","code":"dtt_doy_decimal(x, ...)"},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_doy_decimal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Day of the Year Decimal — dtt_doy_decimal","text":"x Date POSIXct vector. ... Unused.","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_doy_decimal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Day of the Year Decimal — dtt_doy_decimal","text":"numeric vector 0 366 day year.","code":""},{"path":[]},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_doy_decimal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Day of the Year Decimal — dtt_doy_decimal","text":"","code":"dtt_doy_decimal(Sys.Date()) #> [1] 257"},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_doy_to_date.html","id":null,"dir":"Reference","previous_headings":"","what":"Day of the Year to Date — dtt_doy_to_date","title":"Day of the Year to Date — dtt_doy_to_date","text":"Day Year Date","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_doy_to_date.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Day of the Year to Date — dtt_doy_to_date","text":"","code":"dtt_doy_to_date(x, year = 1972L)"},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_doy_to_date.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Day of the Year to Date — dtt_doy_to_date","text":"x integer vector Day Year. year integer scalar vector year.","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_doy_to_date.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Day of the Year to Date — dtt_doy_to_date","text":"Date vector.","code":""},{"path":[]},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_doy_to_date.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Day of the Year to Date — dtt_doy_to_date","text":"","code":"dtt_doy_to_date(3) #> [1] \"1972-01-03\""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_excel_to_date.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert Excel dates to dates. — dtt_excel_to_date","title":"Convert Excel dates to dates. — dtt_excel_to_date","text":"Converts Excel dates encoded serial numbers date class.","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_excel_to_date.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert Excel dates to dates. — dtt_excel_to_date","text":"","code":"dtt_excel_to_date(x, modern = TRUE, ...)"},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_excel_to_date.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert Excel dates to dates. — dtt_excel_to_date","text":"x vector numbers convert. modern flag specifying whether use modern old Excel date system. ... Unused.","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_excel_to_date.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert Excel dates to dates. — dtt_excel_to_date","text":"floored Date vector.","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_excel_to_date.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert Excel dates to dates. — dtt_excel_to_date","text":"Defaults modern Excel date encoding system. Excel Mac 2008 earlier Mac versions Excel use different date system. date 2016-01-01 represented 42370, modern system. 40908, old system.","code":""},{"path":[]},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_excel_to_date.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert Excel dates to dates. — dtt_excel_to_date","text":"","code":"dtt_excel_to_date(42370) #> [1] \"2016-01-01\" dtt_excel_to_date(40908, modern = FALSE) #> [1] \"2016-01-01\""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_excel_to_date_time.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert Excel date times to date times. — dtt_excel_to_date_time","title":"Convert Excel date times to date times. — dtt_excel_to_date_time","text":"Converts Excel serial date times date time class.","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_excel_to_date_time.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert Excel date times to date times. — dtt_excel_to_date_time","text":"","code":"dtt_excel_to_date_time(x, tz = dtt_default_tz(), modern = TRUE, ...)"},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_excel_to_date_time.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert Excel date times to date times. — dtt_excel_to_date_time","text":"x vector numbers convert. tz string time zone. modern flag specifying whether use modern old Excel date system. ... Unused.","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_excel_to_date_time.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert Excel date times to date times. — dtt_excel_to_date_time","text":"floored POSIXct vector.","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_excel_to_date_time.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert Excel date times to date times. — dtt_excel_to_date_time","text":"Defaults modern Excel date encoding system. Excel Mac 2008 earlier Mac versions Excel use different date system. date 2016-01-01 represented 42370, modern system. 40908, old system.","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_excel_to_date_time.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert Excel date times to date times. — dtt_excel_to_date_time","text":"","code":"dtt_excel_to_date_time(42370.1234) #> [1] \"2016-01-01 02:57:41 UTC\" dtt_excel_to_date_time(c(1000.1145, 43397.84578)) #> [1] \"1902-09-26 02:44:52 UTC\" \"2018-10-24 20:17:55 UTC\" dtt_excel_to_date_time(45324.1234, tz = \"UTC\") #> [1] \"2024-02-02 02:57:41 UTC\" dtt_excel_to_date_time(42370.1234, modern = FALSE) #> [1] \"2020-01-02 02:57:41 UTC\""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_feb29_to_28.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert Feb 29 to Feb 28 — dtt_feb29_to_28","title":"Convert Feb 29 to Feb 28 — dtt_feb29_to_28","text":"Converts Feb 29 Feb 28th","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_feb29_to_28.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert Feb 29 to Feb 28 — dtt_feb29_to_28","text":"","code":"dtt_feb29_to_28(x)"},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_feb29_to_28.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert Feb 29 to Feb 28 — dtt_feb29_to_28","text":"x Date POSIXct vector.","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_feb29_to_28.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert Feb 29 to Feb 28 — dtt_feb29_to_28","text":"modified Date POSIXct vector.","code":""},{"path":[]},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_feb29_to_28.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert Feb 29 to Feb 28 — dtt_feb29_to_28","text":"","code":"dtt_feb29_to_28(as.Date(\"2004-02-29\")) #> [1] \"2004-02-28\""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_floor.html","id":null,"dir":"Reference","previous_headings":"","what":"Floor Date/Time — dtt_floor","title":"Floor Date/Time — dtt_floor","text":"Floors date/time vector","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_floor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Floor Date/Time — dtt_floor","text":"","code":"dtt_floor(x, units, ...)  # S3 method for class 'Date' dtt_floor(x, units = \"days\", ...)  # S3 method for class 'POSIXct' dtt_floor(x, units = \"seconds\", ...)  # S3 method for class 'hms' dtt_floor(x, units = \"seconds\", ...)"},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_floor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Floor Date/Time — dtt_floor","text":"x date/time vector. units string time units. possible values \"secs\", \"minutes\", \"hours\", \"days\" \"weeks\". ... Unused.","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_floor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Floor Date/Time — dtt_floor","text":"floored date/time vector.","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_floor.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Floor Date/Time — dtt_floor","text":"dtt_floor(Date): Floor Date vector dtt_floor(POSIXct): Floor POSIXct vector dtt_floor(hms): Floor hms vector","code":""},{"path":[]},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_floor.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Floor Date/Time — dtt_floor","text":"","code":"dtt_floor(hms::as_hms(\"23:59:59\"), \"hours\") #> 23:00:00"},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_floored.html","id":null,"dir":"Reference","previous_headings":"","what":"Test Floored — dtt_floored","title":"Test Floored — dtt_floored","text":"Test whether date time vector floored.","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_floored.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test Floored — dtt_floored","text":"","code":"dtt_floored(x, ...)  # S3 method for class 'Date' dtt_floored(x, units = \"days\", ...)  # S3 method for class 'POSIXct' dtt_floored(x, units = \"seconds\", ...)  # S3 method for class 'hms' dtt_floored(x, units = \"seconds\", ...)"},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_floored.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test Floored — dtt_floored","text":"x Date, POSIXct hms vector. ... Unused. units string time units. possible values \"secs\", \"minutes\", \"hours\", \"days\" \"weeks\".","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_floored.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Test Floored — dtt_floored","text":"flag indicating whether floored.","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_floored.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Test Floored — dtt_floored","text":"dtt_floored(Date): Test Date vector floored dtt_floored(POSIXct): Test POSIXct vector floored dtt_floored(hms): Test hms vector floored","code":""},{"path":[]},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_floored.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Test Floored — dtt_floored","text":"","code":"dtt_floored(as.Date(\"2002-02-01\")) #> [1] TRUE"},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_hour.html","id":null,"dir":"Reference","previous_headings":"","what":"Get and Set Hour Values — dtt_hours","title":"Get and Set Hour Values — dtt_hours","text":"Gets sets hour values date/time vectors.","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_hour.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get and Set Hour Values — dtt_hours","text":"","code":"dtt_hours(x, ...)  dtt_hours(x) <- value  dtt_hour(x, ...)  dtt_hour(x) <- value  # S3 method for class 'Date' dtt_hour(x, ...)  # S3 method for class 'POSIXct' dtt_hour(x, ...)  # S3 method for class 'hms' dtt_hour(x, ...)  # S3 method for class 'POSIXct' dtt_hour(x) <- value  # S3 method for class 'hms' dtt_hour(x) <- value  dtt_set_hour(x, value)"},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_hour.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get and Set Hour Values — dtt_hours","text":"x date/time vector. ... Unused. value integer vector hour value(s).","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_hour.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get and Set Hour Values — dtt_hours","text":"integer vector (modified date/time vector).","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_hour.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Get and Set Hour Values — dtt_hours","text":"dtt_hour(Date): Get integer vector hour values Date vector dtt_hour(POSIXct): Get integer vector hour values POSIXct vector dtt_hour(hms): Get integer vector hour values hms vector","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_hour.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Get and Set Hour Values — dtt_hours","text":"dtt_hour(POSIXct) <- value: Set hour values POSIXct vector dtt_hour(hms) <- value: Set hour values hms vector","code":""},{"path":[]},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_hour.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get and Set Hour Values — dtt_hours","text":"","code":"x <- as.POSIXct(\"1990-01-02 23:40:51\") dtt_hour(x) #> [1] 23 dtt_hour(x) <- 01L x #> [1] \"1990-01-02 01:40:51 UTC\"  x <- hms::as_hms(\"23:40:51\") dtt_hour(x) #> [1] 23 dtt_hour(x) <- 01L x #> 01:40:51"},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_hour_decimal.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Decimal Hour Values — dtt_hour_decimal","title":"Get Decimal Hour Values — dtt_hour_decimal","text":"Gets decimal hour values date/time vectors.","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_hour_decimal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Decimal Hour Values — dtt_hour_decimal","text":"","code":"dtt_hour_decimal(x, ...)  # S3 method for class 'Date' dtt_hour_decimal(x, ...)  # S3 method for class 'POSIXct' dtt_hour_decimal(x, ...)  # S3 method for class 'hms' dtt_hour_decimal(x, ...)"},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_hour_decimal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Decimal Hour Values — dtt_hour_decimal","text":"x date/time vector. ... Unused.","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_hour_decimal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Decimal Hour Values — dtt_hour_decimal","text":"numeric vector.","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_hour_decimal.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Get Decimal Hour Values — dtt_hour_decimal","text":"dtt_hour_decimal(Date): Get numeric vector decimal hour values Date vector dtt_hour_decimal(POSIXct): Get numeric vector decimal hour values POSIXct vector dtt_hour_decimal(hms): Get numeric vector decimal hour values hms vector","code":""},{"path":[]},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_hour_decimal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Decimal Hour Values — dtt_hour_decimal","text":"","code":"x <- as.POSIXct(\"1990-01-02 23:40:51\") dtt_hour_decimal(x) #> [1] 23.68083 x <- hms::as_hms(\"23:40:51\") dtt_hour_decimal(x) #> [1] 23.68083"},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_is_date.html","id":null,"dir":"Reference","previous_headings":"","what":"Is Date — dtt_is_date","title":"Is Date — dtt_is_date","text":"Date","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_is_date.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Is Date — dtt_is_date","text":"","code":"dtt_is_date(x)"},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_is_date.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Is Date — dtt_is_date","text":"x R object.","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_is_date.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Is Date — dtt_is_date","text":"flag indicating whether R Date vector.","code":""},{"path":[]},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_is_date_time.html","id":null,"dir":"Reference","previous_headings":"","what":"Is Date Time — dtt_is_date_time","title":"Is Date Time — dtt_is_date_time","text":"Date Time","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_is_date_time.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Is Date Time — dtt_is_date_time","text":"","code":"dtt_is_date_time(x)"},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_is_date_time.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Is Date Time — dtt_is_date_time","text":"x R object.","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_is_date_time.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Is Date Time — dtt_is_date_time","text":"flag indicating whether R POSIXct vector.","code":""},{"path":[]},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_is_dtt.html","id":null,"dir":"Reference","previous_headings":"","what":"Is Date or DateTime Object — dtt_is_dtt","title":"Is Date or DateTime Object — dtt_is_dtt","text":"Date DateTime Object","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_is_dtt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Is Date or DateTime Object — dtt_is_dtt","text":"","code":"dtt_is_dtt(x)"},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_is_dtt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Is Date or DateTime Object — dtt_is_dtt","text":"x R object.","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_is_dtt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Is Date or DateTime Object — dtt_is_dtt","text":"flag indicating whether R Date POSIXct vector.","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_leap_year.html","id":null,"dir":"Reference","previous_headings":"","what":"Test for Leap Year — dtt_leap_year","title":"Test for Leap Year — dtt_leap_year","text":"Tests whether year leap year.","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_leap_year.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test for Leap Year — dtt_leap_year","text":"","code":"dtt_leap_year(x)"},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_leap_year.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test for Leap Year — dtt_leap_year","text":"x date/time vector.","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_leap_year.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Test for Leap Year — dtt_leap_year","text":"logical vector indicating whether year leap year.","code":""},{"path":[]},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_leap_year.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Test for Leap Year — dtt_leap_year","text":"","code":"dtt_leap_year(as.Date(\"1999-03-04\", \"2000-02-01\")) #> [1] NA"},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_minute.html","id":null,"dir":"Reference","previous_headings":"","what":"Get and Set Minute Values — dtt_minutes","title":"Get and Set Minute Values — dtt_minutes","text":"Gets sets minute values date/time vectors.","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_minute.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get and Set Minute Values — dtt_minutes","text":"","code":"dtt_minutes(x, ...)  dtt_minutes(x) <- value  dtt_minute(x, ...)  dtt_minute(x) <- value  # S3 method for class 'Date' dtt_minute(x, ...)  # S3 method for class 'POSIXct' dtt_minute(x, ...)  # S3 method for class 'hms' dtt_minute(x, ...)  # S3 method for class 'POSIXct' dtt_minute(x) <- value  # S3 method for class 'hms' dtt_minute(x) <- value  dtt_set_minute(x, value)"},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_minute.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get and Set Minute Values — dtt_minutes","text":"x date/time vector. ... Unused. value integer vector minute value(s).","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_minute.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get and Set Minute Values — dtt_minutes","text":"integer vector (modified date/time vector).","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_minute.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Get and Set Minute Values — dtt_minutes","text":"dtt_minute(Date): Get integer vector minute values Date vector dtt_minute(POSIXct): Get integer vector minute values POSIXct vector dtt_minute(hms): Get integer vector minute values hms vector","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_minute.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Get and Set Minute Values — dtt_minutes","text":"dtt_minute(POSIXct) <- value: Set minute values POSIXct vector dtt_minute(hms) <- value: Set minute values hms vector","code":""},{"path":[]},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_minute.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get and Set Minute Values — dtt_minutes","text":"","code":"x <- as.POSIXct(\"1990-01-02 23:40:51\") dtt_minute(x) #> [1] 40 dtt_minute(x) <- 27L x #> [1] \"1990-01-02 23:27:51 UTC\"  x <- hms::as_hms(\"23:40:51\") dtt_minute(x) #> [1] 40 dtt_minute(x) <- 27L x #> 23:27:51"},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_minute_decimal.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Decimal Minute Values — dtt_minute_decimal","title":"Get Decimal Minute Values — dtt_minute_decimal","text":"Gets decimal minute values date/time vectors.","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_minute_decimal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Decimal Minute Values — dtt_minute_decimal","text":"","code":"dtt_minute_decimal(x, ...)  # S3 method for class 'Date' dtt_minute_decimal(x, ...)  # S3 method for class 'POSIXct' dtt_minute_decimal(x, ...)  # S3 method for class 'hms' dtt_minute_decimal(x, ...)"},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_minute_decimal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Decimal Minute Values — dtt_minute_decimal","text":"x date/time vector. ... Unused.","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_minute_decimal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Decimal Minute Values — dtt_minute_decimal","text":"numeric vector.","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_minute_decimal.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Get Decimal Minute Values — dtt_minute_decimal","text":"dtt_minute_decimal(Date): Get numeric vector decimal minute values Date vector dtt_minute_decimal(POSIXct): Get numeric vector decimal minute values POSIXct vector dtt_minute_decimal(hms): Get numeric vector decimal minute values hms vector","code":""},{"path":[]},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_minute_decimal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Decimal Minute Values — dtt_minute_decimal","text":"","code":"x <- as.POSIXct(\"1990-01-02 23:40:51\") dtt_minute_decimal(x) #> [1] 40.85 x <- hms::as_hms(\"23:40:51\") dtt_minute_decimal(x) #> [1] 40.85"},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_month.html","id":null,"dir":"Reference","previous_headings":"","what":"Get and Set Month Values — dtt_months","title":"Get and Set Month Values — dtt_months","text":"Gets sets month values date/time vectors.","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_month.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get and Set Month Values — dtt_months","text":"","code":"dtt_months(x, ...)  dtt_months(x) <- value  dtt_month(x, ...)  dtt_month(x) <- value  # S3 method for class 'Date' dtt_month(x, ...)  # S3 method for class 'POSIXct' dtt_month(x, ...)  # S3 method for class 'Date' dtt_month(x) <- value  # S3 method for class 'POSIXct' dtt_month(x) <- value  dtt_set_month(x, value)"},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_month.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get and Set Month Values — dtt_months","text":"x date/time vector. ... Unused. value integer vector month value(s).","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_month.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get and Set Month Values — dtt_months","text":"integer vector (modified date/time vector).","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_month.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Get and Set Month Values — dtt_months","text":"dtt_month(Date): Get integer vector month values Date vector dtt_month(POSIXct): Get integer vector month values POSIXct vector","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_month.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Get and Set Month Values — dtt_months","text":"dtt_month(Date) <- value: Set month values Date vector dtt_month(POSIXct) <- value: Set month values POSIXct vector","code":""},{"path":[]},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_month.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get and Set Month Values — dtt_months","text":"","code":"x <- as.Date(\"1990-01-02\") dtt_month(x) #> [1] 1 dtt_month(x) <- 11L x #> [1] \"1990-11-02\"  x <- as.POSIXct(\"1990-01-02 23:40:51\") dtt_month(x) #> [1] 1 dtt_month(x) <- 11L x #> [1] \"1990-11-02 23:40:51 UTC\""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_month_decimal.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Decimal Month Values — dtt_month_decimal","title":"Get Decimal Month Values — dtt_month_decimal","text":"Gets decimal month values date/time vectors.","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_month_decimal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Decimal Month Values — dtt_month_decimal","text":"","code":"dtt_month_decimal(x, ...)  # S3 method for class 'Date' dtt_month_decimal(x, ...)  # S3 method for class 'POSIXct' dtt_month_decimal(x, ...)"},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_month_decimal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Decimal Month Values — dtt_month_decimal","text":"x date/time vector. ... Unused.","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_month_decimal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Decimal Month Values — dtt_month_decimal","text":"numeric vector.","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_month_decimal.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Get Decimal Month Values — dtt_month_decimal","text":"dtt_month_decimal(Date): Get numeric vector decimal year values Date vector dtt_month_decimal(POSIXct): Get numeric vector decimal year values POSIXct vector","code":""},{"path":[]},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_month_decimal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Decimal Month Values — dtt_month_decimal","text":"","code":"x <- as.POSIXct(\"1990-01-03 10:00:01\") dtt_month_decimal(x) #> [1] 1.077957"},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_season.html","id":null,"dir":"Reference","previous_headings":"","what":"Season — dtt_season","title":"Season — dtt_season","text":"Returns factor user specified seasons.","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_season.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Season — dtt_season","text":"","code":"dtt_season(   x,   start = c(Spring = 3L, Summer = 6L, Autumn = 9L, Winter = 12L),   first = NULL )"},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_season.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Season — dtt_season","text":"x Date POSIXct vector start uniquely named integer vector first month season uniquely named Date vector first date season. first string name first season NULL case first season includes Jan 1st.","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_season.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Season — dtt_season","text":"factor seasons.","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_season.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Season — dtt_season","text":"first month first season January (1L), last season considered wrap following year.","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_season.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Season — dtt_season","text":"","code":"dates <- as.Date(c(\"2001-01-01\", \"2001-02-28\", \"2012-09-01\", \"2012-12-01\")) dtt_season(dates) #> [1] Winter Winter Autumn Winter #> Levels: Winter Spring Summer Autumn dtt_season(dates, start = c(Monsoon = 2L, `Dry Period` = 6L)) #> [1] Dry Period Monsoon    Dry Period Dry Period #> Levels: Dry Period Monsoon dtt_season(   dates,   start = c(First = dtt_date(\"2000-01-01\"), Second = dtt_date(\"2000-06-01\")) ) #> [1] First  First  Second Second #> Levels: First Second"},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_second.html","id":null,"dir":"Reference","previous_headings":"","what":"Get and Set Second Values — dtt_seconds","title":"Get and Set Second Values — dtt_seconds","text":"Gets sets second values date/time vectors.","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_second.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get and Set Second Values — dtt_seconds","text":"","code":"dtt_seconds(x, ...)  dtt_seconds(x) <- value  dtt_second(x, ...)  dtt_second(x) <- value  # S3 method for class 'Date' dtt_second(x, ...)  # S3 method for class 'POSIXct' dtt_second(x, ...)  # S3 method for class 'hms' dtt_second(x, ...)  # S3 method for class 'POSIXct' dtt_second(x) <- value  # S3 method for class 'hms' dtt_second(x) <- value  dtt_set_second(x, value)"},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_second.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get and Set Second Values — dtt_seconds","text":"x date/time vector. ... Unused. value integer vector second value(s).","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_second.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get and Set Second Values — dtt_seconds","text":"integer vector (modified date/time vector).","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_second.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Get and Set Second Values — dtt_seconds","text":"dtt_second(Date): Get integer vector second values Date vector dtt_second(POSIXct): Get integer vector second values POSIXct vector dtt_second(hms): Get integer vector second values time vector","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_second.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Get and Set Second Values — dtt_seconds","text":"dtt_second(POSIXct) <- value: Set second values POSIXct vector dtt_second(hms) <- value: Set second values hms vector","code":""},{"path":[]},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_second.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get and Set Second Values — dtt_seconds","text":"","code":"x <- as.POSIXct(\"1990-01-02 23:40:51\") dtt_second(x) #> [1] 51 dtt_second(x) <- 27L x #> [1] \"1990-01-02 23:40:27 UTC\"  x <- hms::as_hms(\"23:40:51\") dtt_second(x) #> [1] 51 dtt_second(x) <- 27L x #> 23:40:27"},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_seq.html","id":null,"dir":"Reference","previous_headings":"","what":"Sequence — dtt_seq","title":"Sequence — dtt_seq","text":"Creates date/time sequence vector. first floored sequence created units. length_out defined number units added .","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_seq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sequence — dtt_seq","text":"","code":"dtt_seq(from, to, units, length_out = NULL, ...)  # S3 method for class 'Date' dtt_seq(from, to = from, units = \"days\", length_out = NULL, ...)  # S3 method for class 'POSIXct' dtt_seq(from, to = from, units = \"seconds\", length_out = NULL, ...)  # S3 method for class 'hms' dtt_seq(   from,   to = from,   units = \"seconds\",   length_out = NULL,   wrap = TRUE,   ... )"},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_seq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sequence — dtt_seq","text":"date/time scalar start. date/time scalar end. units string time units. possible values \"secs\", \"minutes\", \"hours\", \"days\" \"weeks\". length_out integer number units . ... Unused. wrap flag specifying whether wrap hms vectors 23:59:59 00:00:00","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_seq.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sequence — dtt_seq","text":"date/time vector.","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_seq.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Sequence — dtt_seq","text":"dtt_seq(Date): Create Date sequence vector dtt_seq(POSIXct): Create POSIXct sequence vector dtt_seq(hms): Create hms sequence vector","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_seq.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sequence — dtt_seq","text":"","code":"dtt_seq(as.Date(\"2001-01-01\"), as.Date(\"2001-01-05\")) #> [1] \"2001-01-01\" \"2001-01-02\" \"2001-01-03\" \"2001-01-04\" \"2001-01-05\""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_set_tz.html","id":null,"dir":"Reference","previous_headings":"","what":"Set Time Zone — dtt_set_tz","title":"Set Time Zone — dtt_set_tz","text":"Sets time zone date time vector without adjusting clock time. Equivalent lubridate::force_tz().","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_set_tz.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set Time Zone — dtt_set_tz","text":"","code":"dtt_set_tz(x, tz = dtt_default_tz(), ...)  # S3 method for class 'POSIXct' dtt_set_tz(x, tz = dtt_default_tz(), ...)"},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_set_tz.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set Time Zone — dtt_set_tz","text":"x date/time vector. tz string new time zone. ... Unused.","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_set_tz.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set Time Zone — dtt_set_tz","text":"date time vector new time zone.","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_set_tz.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Set Time Zone — dtt_set_tz","text":"dtt_set_tz(POSIXct): Set time zone POSIXct vector","code":""},{"path":[]},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_set_tz.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set Time Zone — dtt_set_tz","text":"","code":"dtt_set_tz(as.POSIXct(\"1970-01-01\", tz = \"Etc/GMT+8\"), tz = \"UTC\") #> [1] \"1970-01-01 UTC\""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_study_year.html","id":null,"dir":"Reference","previous_headings":"","what":"Study Year — dtt_study_year","title":"Study Year — dtt_study_year","text":"Study Year","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_study_year.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Study Year — dtt_study_year","text":"","code":"dtt_study_year(x, start = 1L, full = TRUE)"},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_study_year.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Study Year — dtt_study_year","text":"x Date POSIXct vector. start integer vector starting month Date vector starting date. full flag specifying whether return character vector study years (integer vector first year)","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_study_year.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Study Year — dtt_study_year","text":"character vector study year integer vector first year.","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_study_year.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Study Year — dtt_study_year","text":"","code":"dtt_study_year(   as.Date(c(\"2000-03-31\", \"2000-04-01\", \"2001-04-01\")),   start = 4L ) #> [1] \"1999-2000\" \"2000-2001\" \"2001-2002\" dtt_study_year(   as.Date(c(\"2000-03-31\", \"2000-04-01\", \"2001-04-01\")),   start = 4L,   full = FALSE ) #> [1] 1999 2000 2001"},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_subtract_units.html","id":null,"dir":"Reference","previous_headings":"","what":"Subtract Time Units — dtt_subtract_units","title":"Subtract Time Units — dtt_subtract_units","text":"Subtract time units date time vector.","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_subtract_units.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subtract Time Units — dtt_subtract_units","text":"","code":"dtt_subtract_units(x, n = 1L, units = dtt_units(x))  dtt_subtract_years(x, n = 1L)  dtt_subtract_months(x, n = 1L)  dtt_subtract_days(x, n = 1L)  dtt_subtract_hours(x, n = 1L)  dtt_subtract_minutes(x, n = 1L)  dtt_subtract_seconds(x, n = 1L)"},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_subtract_units.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subtract Time Units — dtt_subtract_units","text":"x date/time vector. n integer number units. units string time units. possible values \"secs\", \"minutes\", \"hours\", \"days\" \"weeks\".","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_subtract_units.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Subtract Time Units — dtt_subtract_units","text":"modified date time vector.","code":""},{"path":[]},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_subtract_units.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Subtract Time Units — dtt_subtract_units","text":"","code":"dtt_subtract_units(as.Date(\"1999-12-31\"), 2L, \"days\") #> [1] \"1999-12-29\""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_sys_date.html","id":null,"dir":"Reference","previous_headings":"","what":"Get System Date — dtt_sys_date","title":"Get System Date — dtt_sys_date","text":"Get System Date","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_sys_date.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get System Date — dtt_sys_date","text":"","code":"dtt_sys_date(tz = dtt_default_tz())"},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_sys_date.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get System Date — dtt_sys_date","text":"tz string time zone.","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_sys_date.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get System Date — dtt_sys_date","text":"floored Date scalar.","code":""},{"path":[]},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_sys_date.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get System Date — dtt_sys_date","text":"","code":"if (FALSE) { # \\dontrun{ dtt_set_default_tz(\"Etc/GMT+12\") dtt_sys_date() dtt_set_default_tz(\"Etc/GMT-12\") dtt_sys_date() dtt_sys_date(tz = \"Etc/GMT+12\") } # }"},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_sys_date_time.html","id":null,"dir":"Reference","previous_headings":"","what":"Get System Date Time — dtt_sys_date_time","title":"Get System Date Time — dtt_sys_date_time","text":"Get System Date Time","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_sys_date_time.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get System Date Time — dtt_sys_date_time","text":"","code":"dtt_sys_date_time(tz = dtt_default_tz())"},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_sys_date_time.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get System Date Time — dtt_sys_date_time","text":"tz string time zone.","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_sys_date_time.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get System Date Time — dtt_sys_date_time","text":"floored POSIXct scalar.","code":""},{"path":[]},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_sys_date_time.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get System Date Time — dtt_sys_date_time","text":"","code":"if (FALSE) { # \\dontrun{ dtt_set_default_tz(\"UTC\") dtt_sys_date_time() dtt_set_default_tz(\"Etc/GMT+8\") dtt_sys_date_time() dtt_sys_date_time(tz = \"UTC\") } # }"},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_sys_time.html","id":null,"dir":"Reference","previous_headings":"","what":"Get System Time — dtt_sys_time","title":"Get System Time — dtt_sys_time","text":"Get System Time","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_sys_time.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get System Time — dtt_sys_time","text":"","code":"dtt_sys_time(tz = dtt_default_tz())"},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_sys_time.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get System Time — dtt_sys_time","text":"tz string time zone.","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_sys_time.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get System Time — dtt_sys_time","text":"floored hms scalar.","code":""},{"path":[]},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_sys_time.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get System Time — dtt_sys_time","text":"","code":"if (FALSE) { # \\dontrun{ dtt_sys_time() } # }"},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_time.html","id":null,"dir":"Reference","previous_headings":"","what":"Floor Time — dtt_set_time","title":"Floor Time — dtt_set_time","text":"Coerces vectors floored (wrapped) hms vectors.","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_time.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Floor Time — dtt_set_time","text":"","code":"dtt_set_time(x, value)  dtt_time(x, ...)  dtt_time(x) <- value  # S3 method for class 'integer' dtt_time(x, ...)  # S3 method for class 'double' dtt_time(x, ...)  # S3 method for class 'character' dtt_time(x, ...)  # S3 method for class 'Date' dtt_time(x, ...)  # S3 method for class 'hms' dtt_time(x, ...)  # S3 method for class 'POSIXct' dtt_time(x, ...)  # S3 method for class 'POSIXlt' dtt_time(x, ...)  # S3 method for class 'Date' dtt_time(x) <- value  # S3 method for class 'POSIXct' dtt_time(x) <- value"},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_time.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Floor Time — dtt_set_time","text":"x vector. value time vector. ... Unused.","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_time.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Floor Time — dtt_set_time","text":"floored hms vector.","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_time.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Floor Time — dtt_set_time","text":"dtt_time(integer): Coerce integer vector floored hms vector dtt_time(double): Coerce double vector floored hms vector dtt_time(character): Coerce character vector floored hms vector dtt_time(Date): Coerce Date vector floored hms vector dtt_time(hms): Coerce hms vector floored hms vector dtt_time(POSIXct): Coerce POSIXct vector floored hms vector dtt_time(POSIXlt): Coerce POSIXlt vector floored hms vector","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_time.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Floor Time — dtt_set_time","text":"dtt_time(Date) <- value: Set time values Date vector dtt_time(POSIXct) <- value: Set time values POSIXct vector","code":""},{"path":[]},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_time.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Floor Time — dtt_set_time","text":"","code":"dtt_time(1L) #> 00:00:01 dtt_time(1.999) #> 00:00:01 dtt_time(-0.001) #> 23:59:59 dtt_time(Sys.Date()) #> 00:00:00 dtt_time(as.POSIXct(\"2001-01-01 02:30:40\")) #> 02:30:40 dtt_time(as.POSIXct(\"2001-01-01 02:30:40\", tz = \"Etc/GMT-8\")) #> 02:30:40"},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_time_from_ints.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Time from Vectors — dtt_time_from_ints","title":"Create Time from Vectors — dtt_time_from_ints","text":"Pass vectors hour, minute second values create time object.","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_time_from_ints.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Time from Vectors — dtt_time_from_ints","text":"","code":"dtt_time_from_ints(hour = 0L, minute = 0L, second = 0L)"},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_time_from_ints.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Time from Vectors — dtt_time_from_ints","text":"hour integer hour 0 23.default value hour zero. minute integer minute 0 59. default value minute zero. second integer second 0 59. default value second zero.","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_time_from_ints.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Time from Vectors — dtt_time_from_ints","text":"floored hms vector.","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_time_from_ints.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create Time from Vectors — dtt_time_from_ints","text":"can helpful needing create time column data frame hour, minute second columns. Vectors must length length one.","code":""},{"path":[]},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_time_from_ints.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create Time from Vectors — dtt_time_from_ints","text":"","code":"dtt_time_from_ints() #> 00:00:00  dtt_time_from_ints(   hour = 10,   minute = 15,   second = 30 ) #> 10:15:30  dtt_time_from_ints(   hour = c(10, 11),   minute = c(15, 15),   second = c(30, 0) ) #> 10:15:30 #> 11:15:00  hour <- c(9, 10, 11) minute <- c(15, 30, 45) second <- 0 dtt_time_from_ints(hour, minute, second) #> 09:15:00 #> 10:30:00 #> 11:45:00"},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_tz.html","id":null,"dir":"Reference","previous_headings":"","what":"Get, Set or Adjust Time Zone — dtt_tz","title":"Get, Set or Adjust Time Zone — dtt_tz","text":"Gets, sets  time zone date time vector.","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_tz.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get, Set or Adjust Time Zone — dtt_tz","text":"","code":"dtt_tz(x, ...)  # S3 method for class 'POSIXct' dtt_tz(x, ...)"},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_tz.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get, Set or Adjust Time Zone — dtt_tz","text":"x date/time vector. ... Unused.","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_tz.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get, Set or Adjust Time Zone — dtt_tz","text":"string time zone.","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_tz.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Get, Set or Adjust Time Zone — dtt_tz","text":"dtt_tz(POSIXct): Get time zone POSIXct vector.","code":""},{"path":[]},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_tz.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get, Set or Adjust Time Zone — dtt_tz","text":"","code":"dtt_tz(as.POSIXct(\"1970-01-01\", tz = \"Etc/GMT+8\")) #> [1] \"Etc/GMT+8\""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_units.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Units — dtt_units","title":"Get Units — dtt_units","text":"Gets smallest units date time vector. possible values 'seconds', 'minutes', 'hours', 'days', 'months' 'years'.","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_units.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Units — dtt_units","text":"","code":"dtt_units(x, ...)  # S3 method for class 'Date' dtt_units(x, ...)  # S3 method for class 'POSIXct' dtt_units(x, ...)  # S3 method for class 'hms' dtt_units(x, ...)"},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_units.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Units — dtt_units","text":"x Date, POSIXct hms vector. ... Unused.","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_units.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Units — dtt_units","text":"string indicating date time units.","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_units.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Get Units — dtt_units","text":"dtt_units(Date): Get time units Date vector dtt_units(POSIXct): Get time units POSIXct vector dtt_units(hms): Get time units hms vector","code":""},{"path":[]},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_units.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Units — dtt_units","text":"","code":"dtt_units(as.Date(\"2000-01-01\")) #> [1] \"years\" dtt_units(as.Date(\"2000-02-01\")) #> [1] \"months\" dtt_units(as.Date(\"2000-01-02\")) #> [1] \"days\""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_units_per_unit.html","id":null,"dir":"Reference","previous_headings":"","what":"Units per Unit — dtt_units_per_unit","title":"Units per Unit — dtt_units_per_unit","text":"Units per Unit","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_units_per_unit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Units per Unit — dtt_units_per_unit","text":"","code":"dtt_units_per_unit(units = \"seconds\", unit = \"days\")"},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_units_per_unit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Units per Unit — dtt_units_per_unit","text":"units string time units. possible values \"secs\", \"minutes\", \"hours\", \"days\" \"weeks\". unit string time unit.","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_units_per_unit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Units per Unit — dtt_units_per_unit","text":"number units per unit","code":""},{"path":[]},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_units_per_unit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Units per Unit — dtt_units_per_unit","text":"","code":"dtt_units_per_unit(\"hours\") #> [1] 24"},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_wday.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Week Day — dtt_wday","title":"Get Week Day — dtt_wday","text":"Gets week days locale.","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_wday.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Week Day — dtt_wday","text":"","code":"dtt_wday(x, abbr = FALSE, ...)  # Default S3 method dtt_wday(x, abbr = FALSE, ...)"},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_wday.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Week Day — dtt_wday","text":"x date/time vector. abbr flag specifying whether abbreviate week days. ... Unused.","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_wday.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Week Day — dtt_wday","text":"character vector week days.","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_wday.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Get Week Day — dtt_wday","text":"dtt_wday(default): Get character vector week days Date vector","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_wday.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Week Day — dtt_wday","text":"","code":"x <- as.Date(\"1990-01-02\") dtt_wday(x) #> [1] \"Tuesday\"  x <- as.POSIXct(\"1990-01-02 23:40:51\") dtt_wday(x, abbr = TRUE) #> [1] \"Tue\""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_wrap.html","id":null,"dir":"Reference","previous_headings":"","what":"Wrap — dtt_wrap","title":"Wrap — dtt_wrap","text":"Wrap","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_wrap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wrap — dtt_wrap","text":"","code":"dtt_wrap(x, ...)"},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_wrap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wrap — dtt_wrap","text":"x date/time vector. ... Unused.","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_wrap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Wrap — dtt_wrap","text":"","code":"dtt_wrap(hms::as_hms(\"24:00:00\")) #> 00:00:00"},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_year.html","id":null,"dir":"Reference","previous_headings":"","what":"Get and Set Year Values — dtt_years","title":"Get and Set Year Values — dtt_years","text":"Gets sets year values date/time vectors.","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_year.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get and Set Year Values — dtt_years","text":"","code":"dtt_years(x, ...)  dtt_years(x) <- value  dtt_set_year(x, value)  dtt_year(x, ...)  dtt_year(x) <- value  # S3 method for class 'Date' dtt_year(x, ...)  # S3 method for class 'POSIXct' dtt_year(x, ...)  # S3 method for class 'Date' dtt_year(x) <- value  # S3 method for class 'POSIXct' dtt_year(x) <- value"},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_year.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get and Set Year Values — dtt_years","text":"x date/time vector. ... Unused. value integer vector year value(s).","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_year.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get and Set Year Values — dtt_years","text":"integer vector (modified date/time vector).","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_year.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Get and Set Year Values — dtt_years","text":"dtt_year(Date): Get integer vector year values Date vector dtt_year(POSIXct): Get integer vector year values POSIXct vector","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_year.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Get and Set Year Values — dtt_years","text":"dtt_year(Date) <- value: Set year values Date vector dtt_year(POSIXct) <- value: Set year values POSIXct vector","code":""},{"path":[]},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_year.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get and Set Year Values — dtt_years","text":"","code":"x <- as.Date(\"1990-01-02\") dtt_year(x) #> [1] 1990 dtt_year(x) <- 11L x #> [1] \"11-01-02\"  x <- as.POSIXct(\"1990-01-02 23:40:51\") dtt_year(x) #> [1] 1990 dtt_year(x) <- 2022L x #> [1] \"2022-01-02 23:40:51 UTC\""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_year_decimal.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Decimal Year Values — dtt_year_decimal","title":"Get Decimal Year Values — dtt_year_decimal","text":"Gets decimal year values date/time vectors.","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_year_decimal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Decimal Year Values — dtt_year_decimal","text":"","code":"dtt_year_decimal(x, ...)  # S3 method for class 'Date' dtt_year_decimal(x, ...)  # S3 method for class 'POSIXct' dtt_year_decimal(x, ...)"},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_year_decimal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Decimal Year Values — dtt_year_decimal","text":"x date/time vector. ... Unused.","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_year_decimal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Decimal Year Values — dtt_year_decimal","text":"numeric vector.","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_year_decimal.html","id":"methods-by-class-","dir":"Reference","previous_headings":"","what":"Methods (by class)","title":"Get Decimal Year Values — dtt_year_decimal","text":"dtt_year_decimal(Date): Get numeric vector decimal year values Date vector dtt_year_decimal(POSIXct): Get numeric vector decimal year values POSIXct vector","code":""},{"path":[]},{"path":"https://poissonconsulting.github.io/dttr2/reference/dtt_year_decimal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Decimal Year Values — dtt_year_decimal","text":"","code":"x <- as.Date(\"1990-01-02\") dtt_year_decimal(x) #> [1] 1990.003"},{"path":"https://poissonconsulting.github.io/dttr2/reference/dttr2-package.html","id":null,"dir":"Reference","previous_headings":"","what":"dttr2: Manipulate Date, POSIXct and hms Vectors — dttr2-package","title":"dttr2: Manipulate Date, POSIXct and hms Vectors — dttr2-package","text":"Manipulates date ('Date'), date time ('POSIXct') time ('hms') vectors. Date/times considered discrete floored whenever encountered. Times wrapped time zones maintained unless explicitly altered user.  Manipulates date ('Date'), date time ('POSIXct') time ('hms') vectors. Date/times considered discrete floored whenever encountered. Times wrapped time zones maintained unless explicitly altered user.","code":""},{"path":[]},{"path":"https://poissonconsulting.github.io/dttr2/reference/dttr2-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"dttr2: Manipulate Date, POSIXct and hms Vectors — dttr2-package","text":"Maintainer: Ayla Pearson ayla@poissonconsulting.ca (ORCID) Authors: Joe Thorley joe@poissonconsulting.ca (ORCID) contributors: Poisson Consulting [copyright holder, funder]","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/is_date_time.html","id":null,"dir":"Reference","previous_headings":"","what":"Is Date/Time — is_date_time","title":"Is Date/Time — is_date_time","text":"Tests whether object Date, POSIXct, hms vector.","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/is_date_time.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Is Date/Time — is_date_time","text":"","code":"is.POSIXct(x)  is_date_time(x)  is.Date(x)  is_date(x)  is.hms(x)  is_time(x)"},{"path":"https://poissonconsulting.github.io/dttr2/reference/is_date_time.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Is Date/Time — is_date_time","text":"x object","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/is_date_time.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Is Date/Time — is_date_time","text":"flag indicating whether x inherits Date, POSIXct hms.","code":""},{"path":[]},{"path":"https://poissonconsulting.github.io/dttr2/reference/params.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameters for dttr2 functions — params","title":"Parameters for dttr2 functions — params","text":"Descriptions parameters dttr2 functions.","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/params.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameters for dttr2 functions — params","text":"x date/time vector. ... Unused. units string time units. possible values \"secs\", \"minutes\", \"hours\", \"days\" \"weeks\". unit string time unit. tz string time zone. n integer number units. date/time scalar start. date/time scalar end. start integer scalar starting month Date scalar starting date. time hms vector time. date Date vector date. length_out integer number units . wrap flag specifying whether wrap hms vectors 23:59:59 00:00:00 abbr flag specifying whether abbreviate week days. as_difftime flag specifying whether return difftime vector. first string name first season NULL case first season includes Jan 1st. y object can coerced POSIXct using dtt_date_time(). full flag specifying whether return character vector study years (integer vector first year) sort flag specifying whether sort vector. sorted flag indicating whether values must sorted. x_name string name object. error flag indicating whether throw informative error immediately generate informative message check fails. origin Origin date. modern flag specifying whether use modern old Excel date system.","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/vld_time.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate Time — vld_time","title":"Validate Time — vld_time","text":"Validates object scalar hms::hms object using inherits(x, class) && length(x) == 1L && !anyNA(x).","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/vld_time.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate Time — vld_time","text":"","code":"vld_time(x)"},{"path":"https://poissonconsulting.github.io/dttr2/reference/vld_time.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate Time — vld_time","text":"x object check.","code":""},{"path":"https://poissonconsulting.github.io/dttr2/reference/vld_time.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate Time — vld_time","text":"flag indicating whether condition met.","code":""},{"path":[]},{"path":"https://poissonconsulting.github.io/dttr2/reference/vld_time.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Validate Time — vld_time","text":"","code":"vld_time(1) #> [1] FALSE vld_time(hms::as_hms(\"10:12:59\")) #> [1] TRUE"},{"path":"https://poissonconsulting.github.io/dttr2/news/index.html","id":"dttr2-0509002","dir":"Changelog","previous_headings":"","what":"dttr2 0.5.0.9002","title":"dttr2 0.5.0.9002","text":"Housekeeping tasks.","code":""},{"path":"https://poissonconsulting.github.io/dttr2/news/index.html","id":"dttr2-0509001","dir":"Changelog","previous_headings":"","what":"dttr2 0.5.0.9001","title":"dttr2 0.5.0.9001","text":"Update set operators code due failures development version R.","code":""},{"path":"https://poissonconsulting.github.io/dttr2/news/index.html","id":"dttr2-0509000","dir":"Changelog","previous_headings":"","what":"dttr2 0.5.0.9000","title":"dttr2 0.5.0.9000","text":"Internal changes .","code":""},{"path":"https://poissonconsulting.github.io/dttr2/news/index.html","id":"dttr2-050","dir":"Changelog","previous_headings":"","what":"dttr2 0.5.0","title":"dttr2 0.5.0","text":"CRAN release: 2023-11-14 Adding excel date time function package dtt_excel_to_date_time()","code":""},{"path":"https://poissonconsulting.github.io/dttr2/news/index.html","id":"dttr2-0429002","dir":"Changelog","previous_headings":"","what":"dttr2 0.4.2.9002","title":"dttr2 0.4.2.9002","text":"Updating tests due POSIXct bug fix","code":""},{"path":"https://poissonconsulting.github.io/dttr2/news/index.html","id":"dttr2-0429001","dir":"Changelog","previous_headings":"","what":"dttr2 0.4.2.9001","title":"dttr2 0.4.2.9001","text":"Updating dtt_*_from_ints() functions handle missing values setting whole value NA one part missing","code":""},{"path":"https://poissonconsulting.github.io/dttr2/news/index.html","id":"dttr2-0429000","dir":"Changelog","previous_headings":"","what":"dttr2 0.4.2.9000","title":"dttr2 0.4.2.9000","text":"added dtt_date_from_ints(), dtt_time_from_ints() dtt_date_time_from_ints() create date time objects vectors integers.","code":""},{"path":"https://poissonconsulting.github.io/dttr2/news/index.html","id":"dttr2-042","dir":"Changelog","previous_headings":"","what":"dttr2 0.4.2","title":"dttr2 0.4.2","text":"CRAN release: 2022-09-26 previous version.","code":""},{"path":"https://poissonconsulting.github.io/dttr2/news/index.html","id":"dttr2-0419001","dir":"Changelog","previous_headings":"","what":"dttr2 0.4.1.9001","title":"dttr2 0.4.1.9001","text":"Ayla Pearson now co-author maintainer.","code":""},{"path":"https://poissonconsulting.github.io/dttr2/news/index.html","id":"dttr2-0419000","dir":"Changelog","previous_headings":"","what":"dttr2 0.4.1.9000","title":"dttr2 0.4.1.9000","text":"previous version.","code":""},{"path":"https://poissonconsulting.github.io/dttr2/news/index.html","id":"dttr2-041","dir":"Changelog","previous_headings":"","what":"dttr2 0.4.1","title":"dttr2 0.4.1","text":"CRAN release: 2022-08-26 Fix HTML attribute. Increase minimum compatible R version 3.4.","code":""},{"path":"https://poissonconsulting.github.io/dttr2/news/index.html","id":"dttr2-040","dir":"Changelog","previous_headings":"","what":"dttr2 0.4.0","title":"dttr2 0.4.0","text":"CRAN release: 2021-09-19 dtt_decade() dtt_days_in_month() dtt_days_in_year() dtt_month_decimal(), dtt_year_decimal.Date() dtt_day_decimal(), dtt_doy_decimal(), dtt_hour_decimal() dtt_minute_decimal() dtt_leap_year() dtt_adjust_units() accepts fractional values.","code":""},{"path":"https://poissonconsulting.github.io/dttr2/news/index.html","id":"dttr2-030","dir":"Changelog","previous_headings":"","what":"dttr2 0.3.0","title":"dttr2 0.3.0","text":"CRAN release: 2020-07-10 Added test functions - is_date() - is_date_time() - is_time() Added get functions default time zone. - dtt_sys_date() - dtt_sys_date_time() - dtt_sys_time() - Added get POSIXct object year set 1972. - dtt_dayte_time().","code":""},{"path":"https://poissonconsulting.github.io/dttr2/news/index.html","id":"dttr2-020","dir":"Changelog","previous_headings":"","what":"dttr2 0.2.0","title":"dttr2 0.2.0","text":"CRAN release: 2020-05-01 Bug fix c.Date development version coerces arguments Date. Added dtt_date_add_time() add times Dates vectors. Added dtt_diff() get time differences. Added dtt_set_date() dtt_set_time() set dates times. Add first = NULL argument dtt_season() allow setting first season year. dtt_season() now returns factor opposed ordered factor. Added dtt_wday() get weekday character vector.","code":""},{"path":"https://poissonconsulting.github.io/dttr2/news/index.html","id":"dttr2-010","dir":"Changelog","previous_headings":"","what":"dttr2 0.1.0","title":"dttr2 0.1.0","text":"CRAN release: 2020-03-04 Functions now accept whole numerics previously integers required. Added chk_time() vld_time() check validate non-missing hms::hms scalar. Soft-deprecated check_tz() chk::chk_identical(dtt_tz(x), tz)","code":""},{"path":"https://poissonconsulting.github.io/dttr2/news/index.html","id":"dttr2-002","dir":"Changelog","previous_headings":"","what":"dttr2 0.0.2","title":"dttr2 0.0.2","text":"CRAN release: 2020-02-05 Removed reference missing …parameters.","code":""},{"path":"https://poissonconsulting.github.io/dttr2/news/index.html","id":"dttr2-001","dir":"Changelog","previous_headings":"","what":"dttr2 0.0.1","title":"dttr2 0.0.1","text":"CRAN release: 2019-06-28 Added NEWS.md file track changes package.","code":""}]
